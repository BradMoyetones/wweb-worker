CREATE TABLE `workflow_executions` (
	`id` text PRIMARY KEY NOT NULL,
	`workflow_id` text NOT NULL,
	`execution_number` integer NOT NULL,
	`triggered_by` text NOT NULL,
	`triggered_by_user_id` text,
	`status` text NOT NULL,
	`started_at` integer NOT NULL,
	`completed_at` integer,
	`duration` integer,
	`current_step` text,
	`steps_completed` text,
	`steps_failed` text,
	`input_data` text,
	`output_data` text,
	`error_message` text,
	`error_step` text,
	`retry_count` integer DEFAULT 0 NOT NULL,
	`resources_used` text,
	`environment` text NOT NULL,
	`version` text NOT NULL,
	`created_at` integer,
	`updated_at` integer,
	FOREIGN KEY (`workflow_id`) REFERENCES `workflows`(`id`) ON UPDATE cascade ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `workflow_step_executions` (
	`id` text PRIMARY KEY NOT NULL,
	`execution_id` text NOT NULL,
	`step_id` text NOT NULL,
	`step_name` text NOT NULL,
	`step_type` text NOT NULL,
	`status` text NOT NULL,
	`started_at` integer NOT NULL,
	`completed_at` integer,
	`duration` integer,
	`input_data` text,
	`output_data` text,
	`error_message` text,
	`retry_count` integer DEFAULT 0 NOT NULL,
	`created_at` integer,
	FOREIGN KEY (`execution_id`) REFERENCES `workflow_executions`(`id`) ON UPDATE cascade ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `workflows` (
	`id` text PRIMARY KEY NOT NULL,
	`name` text NOT NULL,
	`description` text,
	`data` text,
	`status` text NOT NULL,
	`priority` text NOT NULL,
	`started_at` integer,
	`completed_at` integer,
	`last_executed_at` integer,
	`next_scheduled_at` integer,
	`current_step` text,
	`total_steps` integer DEFAULT 0 NOT NULL,
	`completed_steps` integer DEFAULT 0 NOT NULL,
	`created_by` text NOT NULL,
	`assigned_to` text,
	`tags` text,
	`created_at` integer,
	`updated_at` integer,
	`timeout` integer,
	`max_retries` integer DEFAULT 0 NOT NULL,
	`current_retries` integer DEFAULT 0 NOT NULL
);
